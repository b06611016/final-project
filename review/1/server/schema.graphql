type Query {
    messages(user: String): [Message!]!
}

type Mutation {
    addMessage(sender: String!, receiver: String!, body: String!): String
    clearMessages(user: String): String
}

type Subscription {
    message(user: String): MessageSubscriptionPayload!
}

type MessageSubscriptionPayload {
    mutation: MutationType!
    data: Message!
}

enum MutationType {
    SEND
    RECEIVE
    SUPERVISE
    DELETED
}

type Message{
    sender: String!
    receiver: String!
    body: String!
    _id: ID!
}
